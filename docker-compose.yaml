version: '3'
services:

  producer:
    build: ./producer/
    ports:
      - "8082:8080"
    depends_on:
      - kafka
      - zookeeper

  spark:
    image: "docker.io/bitnami/spark:3"
    ports:
      - "8084:8080"
      - "7077:7077"
    environment:
      SPARK_MODE: "master"
      SPARK_RPC_AUTHENTICATION_ENABLED: "no"
      SPARK_RPC_ENCRYPTION_ENABLED: "no"
      SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED: "no"
      SPARK_SSL_ENABLED: "no"
    volumes:
      - ./workspace/:/bitnami/spark/

  spark-worker:
    image: "docker.io/bitnami/spark:3"
    environment:
      SPARK_MODE: "worker"
      SPARK_MASTER_URL: "spark://spark:7077"
      SPARK_WORKER_CORES: "1"
      SPARK_WORKER_MEMORY: "512m"
      SPARK_RPC_AUTHENTICATION_ENABLED: "no"
      SPARK_RPC_ENCRYPTION_ENABLED: "no"
      SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED: "no"
      SPARK_SSL_ENABLED: "no"
    volumes:
      - ./workspace/:/bitnami/spark/

  zookeeper:
    image: "wurstmeister/zookeeper"
    ports:
      - "2181:2181"

  kafka:
    image: "wurstmeister/kafka:2.13-2.6.0"
    ports:
      - "9092"
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: "1"
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_LISTENERS: "INTERNAL://kafka:9092,OUTSIDE://kafka:9094"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:9092,OUTSIDE://localhost:9094"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_CREATE_TOPICS: "price_changes1:1:1"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
    depends_on:
      - zookeeper
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"

  postgres:
    image: postgres:13.3-alpine
    restart: always
    ports:
      - "5433:5432"
    environment:
      - "POSTGRES_USER=POSTGRES_USER"
      - "POSTGRES_PASSWORD=POSTGRES_PASSWORD"
      - "POSTGRES_DB=POSTGRES_DB"
    volumes:
      - ./postgres-startup-scripts/:/docker-entrypoint-initdb.d/

volumes:
  workspace:


